"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[3961],{25478:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var s=t(85893),r=t(11151);const i={sidebar_position:1},a=void 0,o={id:"system-architecture/design",title:"design",description:"Purpose",source:"@site/docs/system-architecture/design.md",sourceDirName:"system-architecture",slug:"/system-architecture/design",permalink:"/project-synesthesia-reading-app/docs/system-architecture/design",draft:!1,unlisted:!1,editUrl:"https://github.com/Capstone-Projects-2024-Spring/project-synesthesia-reading-app/edit/main/documentation/docs/system-architecture/design.md",tags:[],version:"current",lastUpdatedBy:"Elijah Bigham",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"System Architecture",permalink:"/project-synesthesia-reading-app/docs/category/system-architecture"},next:{title:"Development Environment",permalink:"/project-synesthesia-reading-app/docs/system-architecture/development-environment"}},c={},d=[{value:"User-Interface",id:"user-interface",level:2},{value:"Technology",id:"technology",level:3},{value:"Class Diagram",id:"class-diagram",level:3},{value:"Design Mock-Ups",id:"design-mock-ups",level:3}];function l(e){const n={a:"a",em:"em",h2:"h2",h3:"h3",img:"img",mermaid:"mermaid",p:"p",strong:"strong",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Purpose"})}),"\n",(0,s.jsx)(n.p,{children:"The Design Document - Part I Architecture describes the software architecture and how the requirements are mapped into the design. This document will be a combination of diagrams and text that describes what the diagrams are showing."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Requirements"})}),"\n",(0,s.jsx)(n.p,{children:"In addition to the general requirements the Design Document - Part I Architecture will contain:"}),"\n",(0,s.jsx)(n.p,{children:"A description the different components and their interfaces. For example: client, server, database."}),"\n",(0,s.jsx)(n.p,{children:"For each component provide class diagrams showing the classes to be developed (or used) and their relationship."}),"\n",(0,s.jsxs)(n.p,{children:["Sequence diagrams showing the data flow for ",(0,s.jsx)(n.em,{children:"all"})," use cases.\xa0One sequence diagram corresponds to one use case and different use cases should have different corresponding sequence diagrams."]}),"\n",(0,s.jsx)(n.p,{children:"Describe algorithms employed in your project, e.g. neural network paradigm, training and training data set, etc."}),"\n",(0,s.jsx)(n.p,{children:"If there is a database:"}),"\n",(0,s.jsx)(n.p,{children:"Entity-relation diagram."}),"\n",(0,s.jsx)(n.p,{children:"Table design."}),"\n",(0,s.jsxs)(n.p,{children:["A check list for architecture design is attached here ",(0,s.jsx)(n.a,{href:"https://templeu.instructure.com/courses/106563/files/16928870/download?wrap=1",title:"architecture_design_checklist.pdf",children:"architecture_design_checklist.pdf"}),"\xa0 and should be used as a guidance."]}),"\n",(0,s.jsx)(n.h2,{id:"user-interface",children:"User-Interface"}),"\n",(0,s.jsx)(n.h3,{id:"technology",children:"Technology"}),"\n",(0,s.jsx)(n.p,{children:"User-Interface created using ReactJS, Tailwind, and mUI. Front-end scripting executed using ReactJS."}),"\n",(0,s.jsx)(n.h3,{id:"class-diagram",children:"Class Diagram"}),"\n",(0,s.jsx)(n.mermaid,{value:'classDiagram\n  App o-- Account\n  App : - Account user\n   \n  Account : + colorWeights\n  Account : + documentList\n  Account : + getUserData()\n  Account o-- Login\n  Login : - Credentials userCredentials\n  Login : + checkCredentials()\n  Account o-- SignUp\n  SignUp : - Credentials ruserCredentials\n  SignUp : + registerUser()\n  Account o-- Credentials\n  Credentials : + username\n  Credentials : + password\n\n  App o-- Documents\n  Documents : + documentList\n  Documents o-- Download\n  Download: + saveToDevice(Document)\n  Documents o-- Upload\n  Upload: + pushToServer(Document)\n  Documents o-- Read\n  Read: + documentText\n  Read: - Array<Note> noteList\n  Read o-- "0...*" Note\n  Note: + String text\n  Note: - int position\n  Read: - lazyLoadDoc(DocID)\n  Read: + colorText(text)\n  Read: - hightlightText(start, stop)\n  Read: - makeNote(text)\n  App o-- Calibrate\n  Calibrate: Array<Integer> letterHues\n  Calibrate: ColorModel userColorModel\n  Calibrate: updateRemoteModel()\n  Calibrate <-- "1" ColorModel\n  ColorModel: weights\n  \n  \n  '}),"\n",(0,s.jsx)(n.h3,{id:"design-mock-ups",children:"Design Mock-Ups"}),"\n",(0,s.jsx)("p",{children:"Welcome, Login, & Sign Up Screens"}),"\n",(0,s.jsxs)("div",{children:[(0,s.jsx)("img",{src:"https://github.com/Capstone-Projects-2024-Spring/project-synesthesia-reading-app/assets/40969165/b3638ab1-6bb3-49b0-9d51-5e4d387d55cc",alt:"Welcome UI",width:"33%"}),(0,s.jsx)("img",{src:"https://github.com/Capstone-Projects-2024-Spring/project-synesthesia-reading-app/assets/40969165/787e1d42-dee6-4b00-b950-56e48fb5bfb7",alt:"Login UI",width:"33%"}),(0,s.jsx)("img",{src:"https://github.com/Capstone-Projects-2024-Spring/project-synesthesia-reading-app/assets/40969165/a70b62d3-eb85-4af4-8a3b-7898a4d760d2",alt:"Sign Up UI",width:"33%"})]}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)("p",{children:"Document Reading Screen"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://github.com/Capstone-Projects-2024-Spring/project-synesthesia-reading-app/assets/40969165/a75439be-f688-44e0-9563-91d7c1a74f6b",alt:"document reading"})})]})}function p(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>a});var s=t(67294);const r={},i=s.createContext(r);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);