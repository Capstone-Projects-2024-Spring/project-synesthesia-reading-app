"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docsSidebar":[{"type":"link","label":"Introduction","href":"/project-synesthesia-reading-app/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"Requirements Specification","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"System Overview","href":"/project-synesthesia-reading-app/docs/requirements/system-overview","docId":"requirements/system-overview","unlisted":false},{"type":"link","label":"System Block Diagram","href":"/project-synesthesia-reading-app/docs/requirements/system-block-diagram","docId":"requirements/system-block-diagram","unlisted":false},{"type":"link","label":"General Requirements","href":"/project-synesthesia-reading-app/docs/requirements/general-requirements","docId":"requirements/general-requirements","unlisted":false},{"type":"link","label":"Features and Requirements","href":"/project-synesthesia-reading-app/docs/requirements/features-and-requirements","docId":"requirements/features-and-requirements","unlisted":false},{"type":"link","label":"Use-case descriptions","href":"/project-synesthesia-reading-app/docs/requirements/use-case-descriptions","docId":"requirements/use-case-descriptions","unlisted":false}],"href":"/project-synesthesia-reading-app/docs/category/requirements-specification"},{"type":"category","label":"System Architecture","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Design","href":"/project-synesthesia-reading-app/docs/system-architecture/design","docId":"system-architecture/design","unlisted":false},{"type":"link","label":"Development Environment","href":"/project-synesthesia-reading-app/docs/system-architecture/development-environment","docId":"system-architecture/development-environment","unlisted":false},{"type":"link","label":"Version Control","href":"/project-synesthesia-reading-app/docs/system-architecture/version-control","docId":"system-architecture/version-control","unlisted":false},{"type":"link","label":"Algorithms","href":"/project-synesthesia-reading-app/docs/system-architecture/algorithms","docId":"system-architecture/algorithms","unlisted":false},{"type":"link","label":"Database Management","href":"/project-synesthesia-reading-app/docs/system-architecture/database-management","docId":"system-architecture/database-management","unlisted":false}],"href":"/project-synesthesia-reading-app/docs/category/system-architecture"},{"type":"category","label":"API Specification","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"API Documentation","href":"/project-synesthesia-reading-app/docs/api-specification/openapi-spec","docId":"api-specification/openapi-spec","unlisted":false}],"href":"/project-synesthesia-reading-app/docs/category/api-specification"},{"type":"category","label":"Test Procedures","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Unit tests","href":"/project-synesthesia-reading-app/docs/testing/unit-testing","docId":"testing/unit-testing","unlisted":false},{"type":"link","label":"Integration tests","href":"/project-synesthesia-reading-app/docs/testing/integration-testing","docId":"testing/integration-testing","unlisted":false},{"type":"link","label":"Acceptance test","href":"/project-synesthesia-reading-app/docs/testing/acceptence-testing","docId":"testing/acceptence-testing","unlisted":false}],"href":"/project-synesthesia-reading-app/docs/category/test-procedures"}]},"docs":{"api-specification/openapi-spec":{"id":"api-specification/openapi-spec","title":"API Documentation","description":"Interactive documentation for our RESTful API","sidebar":"docsSidebar"},"intro":{"id":"intro","title":"Introduction","description":"","sidebar":"docsSidebar"},"requirements/features-and-requirements":{"id":"requirements/features-and-requirements","title":"Features and Requirements","description":"Functional Requirements","sidebar":"docsSidebar"},"requirements/general-requirements":{"id":"requirements/general-requirements","title":"General Requirements","description":"- Internet connection is necessary to download the app, create a color profile, and continue to calibrate the color-generating algorithm. Documents can be read and annotated offline, but changes to the algorithm based off of color alterations would wait until the app can sync with the cloud.","sidebar":"docsSidebar"},"requirements/system-block-diagram":{"id":"requirements/system-block-diagram","title":"System Block Diagram","description":"System Block Diagram","sidebar":"docsSidebar"},"requirements/system-overview":{"id":"requirements/system-overview","title":"System Overview","description":"Project Abstract","sidebar":"docsSidebar"},"requirements/use-case-descriptions":{"id":"requirements/use-case-descriptions","title":"Use-case descriptions","description":"Use Case 1: User creates an account","sidebar":"docsSidebar"},"system-architecture/algorithms":{"id":"system-architecture/algorithms","title":"Algorithms","description":"The Synesthesia Reading App uses a series of algorithms to render words in a synesthete\'s colors.","sidebar":"docsSidebar"},"system-architecture/database-management":{"id":"system-architecture/database-management","title":"Database Management","description":"Database Diagram","sidebar":"docsSidebar"},"system-architecture/design":{"id":"system-architecture/design","title":"Design","description":"User-Interface","sidebar":"docsSidebar"},"system-architecture/development-environment":{"id":"system-architecture/development-environment","title":"Development Environment","description":"Hardware Requirements","sidebar":"docsSidebar"},"system-architecture/version-control":{"id":"system-architecture/version-control","title":"Version Control","description":"The development of ColorInSync will use git for version control. A definitive version of the codebase will be maintained within the \\"main\\" branch hosted on GitHub.","sidebar":"docsSidebar"},"testing/acceptence-testing":{"id":"testing/acceptence-testing","title":"Acceptance test","description":"Demonstration of all of the functional and non-functional requirements. This can be a combination of automated tests derived from the use-cases (user stories) and manual tests with recorded observation of the results.","sidebar":"docsSidebar"},"testing/integration-testing":{"id":"testing/integration-testing","title":"Integration tests","description":"Tests to demonstrate each use-case based on the use-case descriptions and the sequence diagrams. External input should be provided via mock objects and results verified via mock objects. Integration tests should not require manual entry of data nor require manual interpretation of results.","sidebar":"docsSidebar"},"testing/unit-testing":{"id":"testing/unit-testing","title":"Unit tests","description":"React Component Unit Testing","sidebar":"docsSidebar"}}}')}}]);