"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[7607],{40812:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>i,contentTitle:()=>s,default:()=>p,frontMatter:()=>c,metadata:()=>o,toc:()=>l});var t=n(85893),r=n(11151);const c={sidebar_position:5},s="Use-case descriptions",o={id:"requirements/use-case-descriptions",title:"Use-case descriptions",description:"Use Case 1: User creates an account",source:"@site/docs/requirements/use-case-descriptions.md",sourceDirName:"requirements",slug:"/requirements/use-case-descriptions",permalink:"/project-synesthesia-reading-app/docs/requirements/use-case-descriptions",draft:!1,unlisted:!1,editUrl:"https://github.com/Capstone-Projects-2024-Spring/project-synesthesia-reading-app/edit/main/documentation/docs/requirements/use-case-descriptions.md",tags:[],version:"current",lastUpdatedBy:"Elijah Bigham",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"docsSidebar",previous:{title:"Features and Requirements",permalink:"/project-synesthesia-reading-app/docs/requirements/features-and-requirements"},next:{title:"System Architecture",permalink:"/project-synesthesia-reading-app/docs/category/system-architecture"}},i={},l=[{value:"Use Case 1: User creates an account",id:"use-case-1-user-creates-an-account",level:2},{value:"Use Case 2: User calibrates color profile",id:"use-case-2-user-calibrates-color-profile",level:2},{value:"Use Case 3: User uploads a document",id:"use-case-3-user-uploads-a-document",level:2},{value:"Use Case 4: Reader Opens a Document",id:"use-case-4-reader-opens-a-document",level:2}];function d(e){const a={h1:"h1",h2:"h2",li:"li",mermaid:"mermaid",ol:"ol",p:"p",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.h1,{id:"use-case-descriptions",children:"Use-case descriptions"}),"\n",(0,t.jsx)(a.h2,{id:"use-case-1-user-creates-an-account",children:"Use Case 1: User creates an account"}),"\n",(0,t.jsx)(a.p,{children:"As a user, I want to create an account in order to use the same color profile and documents across devices"}),"\n",(0,t.jsxs)(a.ol,{children:["\n",(0,t.jsx)(a.li,{children:'User clicks "Google Login"'}),"\n",(0,t.jsx)(a.li,{children:"User enters account info --\x3e login with Google*"}),"\n",(0,t.jsx)(a.li,{children:"Color profile is automatically synced to the web server"}),"\n"]}),"\n",(0,t.jsx)(a.mermaid,{value:"sequenceDiagram\n    participant User\n    participant React UI\n    participant Google\n    participant Color Profile Handler\n    participant Laravel Backend\n    participant Web Server\n    activate React UI\n    \n    User->>React UI: Google login\n    React UI--\x3e>User: render screen\n    loop entering information\n        User->>React UI: enter field/type login info\n        React UI--\x3e>User: render screen\n        end\n    \n    React UI->>Google: app's client ID & login info\n    activate Google\n    Google--\x3e>React UI: Google profile ID\n    deactivate Google\n    \n    React UI->>React UI: sync color profile to cloud\n    \n    React UI->>Color Profile Handler: get Color Profile\n    activate Color Profile Handler\n    Color Profile Handler--\x3e>React UI: Color Profile\n    deactivate Color Profile Handler\n    \n    React UI->>Laravel Backend: user ID token & Color Profile\n    activate Laravel Backend\n    Laravel Backend->>Web Server: POST new color profile with ID token\n    activate Web Server\n    Web Server--\x3e>Laravel Backend: 201 Created\n    deactivate Web Server\n    \n    Laravel Backend--\x3e>React UI: success\n    deactivate Laravel Backend\n    \n    React UI--\x3e>User: color profile synced!\n    \n    \n    deactivate React UI"}),"\n",(0,t.jsx)(a.h2,{id:"use-case-2-user-calibrates-color-profile",children:"Use Case 2: User calibrates color profile"}),"\n",(0,t.jsx)(a.p,{children:"As a new user, I want to personalize my reading experience by setting my preferred color calibration for letters and numbers."}),"\n",(0,t.jsxs)(a.ol,{children:["\n",(0,t.jsx)(a.li,{children:"User is directed to create their color profile"}),"\n",(0,t.jsx)(a.li,{children:"User selects letter-color associations using a color picker"}),"\n",(0,t.jsx)(a.li,{children:"User selects number-color associations using a color picker"}),"\n",(0,t.jsx)(a.li,{children:"Sends grapheme-color associations to backend"}),"\n",(0,t.jsx)(a.li,{children:"Directs user to the home page."}),"\n"]}),"\n",(0,t.jsx)(a.mermaid,{value:"sequenceDiagram\n    participant User\n    participant ReactUI\n    participant Laravel Backend\n    \n    activate ReactUI\n    loop for each letter and numeral\n        User->>ReactUI: pick color with color picker\n        ReactUI--\x3e>User: shows color picker for next grapheme\n    end\n    \n    ReactUI->>Laravel Backend: POST request with grapheme-color associations\n    activate Laravel Backend\n    Laravel Backend->>Laravel Backend: create new Color Profile\n    Laravel Backend--\x3e>ReactUI: 'created' response\n    deactivate Laravel Backend\n    \n    ReactUI--\x3e>User: returns user to document library\n\n    deactivate ReactUI"}),"\n",(0,t.jsx)(a.h2,{id:"use-case-3-user-uploads-a-document",children:"Use Case 3: User uploads a document"}),"\n",(0,t.jsx)(a.p,{children:"As a user, I want to upload a PDF so that I can be able to access it within the app."}),"\n",(0,t.jsxs)(a.ol,{children:["\n",(0,t.jsx)(a.li,{children:"From the document library page, clicks the '+' button"}),"\n",(0,t.jsx)(a.li,{children:"UI displays a dialogue with the 'Upload PDF' button"}),"\n",(0,t.jsx)(a.li,{children:"A file directory opens"}),"\n",(0,t.jsx)(a.li,{children:"The user picks the file they wish to upload from said directory"}),"\n",(0,t.jsx)(a.li,{children:"The PDF file is now available to open from the app library."}),"\n"]}),"\n",(0,t.jsx)(a.mermaid,{value:"sequenceDiagram\n   participant User\n   participant ReactUI\n   participant Laravel Backend\n   participant Database\n\n   activate ReactUI\n   loop Uploading Documents\n      User->>ReactUI: clicks '+'\n      ReactUI--\x3e>User: diplays 'Upload PDF' button\n      User->>ReactUI: clicks 'Upload PDF'\n      ReactUI--\x3e>User: opens directory on user system\n      User->>ReactUI: selects a document to upload\n      ReactUI->>Laravel Backend: Uploads document\n         activate Laravel Backend\n         Laravel Backend->>Database: Create database entry\n            activate Database\n            Database--\x3e>Laravel Backend: successful database entry\n         deactivate Database\n         Laravel Backend--\x3e>ReactUI: 201 Created, JSON of doc information\n      deactivate Laravel Backend\n      ReactUI--\x3e>User: Update Doc library from JSON \n   deactivate ReactUI\n   end"}),"\n",(0,t.jsx)(a.h2,{id:"use-case-4-reader-opens-a-document",children:"Use Case 4: Reader Opens a Document"}),"\n",(0,t.jsx)(a.p,{children:"As a user, I want to read an uploaded document"}),"\n",(0,t.jsxs)(a.ol,{children:["\n",(0,t.jsx)(a.li,{children:"From the document library page, I click a document icon"}),"\n",(0,t.jsx)(a.li,{children:"UI displays the document in my colors"}),"\n"]}),"\n",(0,t.jsx)(a.mermaid,{value:"sequenceDiagram\n    participant User\n    participant ReactUI\n    participant Laravel Backend\n    participant Coloring Flask\n    \n    activate ReactUI\n    \n    User->>ReactUI: click document icon\n    ReactUI->>Laravel Backend: request with document id\n    activate Laravel Backend\n    Laravel Backend->>Laravel Backend: get color profile\n    Laravel Backend->>Laravel Backend: get document text\n    \n    Laravel Backend->>Coloring Flask: request with text and color profile\n    activate Coloring Flask\n    note right of Coloring Flask: see Coloring Component page\n    Coloring Flask--\x3e>Laravel Backend: 'OK\" response with Colored Document JSON\n    deactivate Coloring Flask\n    \n    Laravel Backend--\x3e>ReactUI: 'OK' response with Colored Document JSON\n    deactivate Laravel Backend\n    \n    ReactUI->>ReactUI: loads page with colored text\n    \n    deactivate ReactUI\n\n"})]})}function p(e={}){const{wrapper:a}={...(0,r.a)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},11151:(e,a,n)=>{n.d(a,{Z:()=>o,a:()=>s});var t=n(67294);const r={},c=t.createContext(r);function s(e){const a=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(c.Provider,{value:a},e.children)}}}]);